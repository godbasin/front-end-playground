(window.webpackJsonp=window.webpackJsonp||[]).push([[234],{795:function(t,v,_){"use strict";_.r(v);var a=_(69),e=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("一个小程序有很多页面，每个页面又有各自的线程、生命周期和功能逻辑。关于小程序的生命周期、页面之间的跳转有哪些特殊的地方呢？")]),t._v(" "),_("h1",{attrs:{id:"小程序的启动"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#小程序的启动"}},[t._v("#")]),t._v(" 小程序的启动")]),t._v(" "),_("h2",{attrs:{id:"小程序启动过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#小程序启动过程"}},[t._v("#")]),t._v(" 小程序启动过程")]),t._v(" "),_("p",[t._v("初次进入小程序的时候，微信客户端初始化好宿主环境，同时从网络下载或者从本地缓存中拿到小程序的代码包，把它注入到宿主环境。大概是这么个过程：")]),t._v(" "),_("ol",[_("li",[t._v("创建线程（渲染层和逻辑层），启动小程序。")]),t._v(" "),_("li",[t._v("载入基础库（WebView 基础库和 AppService 基础库）。")]),t._v(" "),_("li",[t._v("载入小程序业务代码（下载或者从本地缓存中拿到）。")]),t._v(" "),_("li",[t._v("使用"),_("code",[t._v("App()")]),t._v("注册程序实例。")])]),t._v(" "),_("p",[t._v("为了让小程序业务代码能够调用 API 以及组件，就需要在启动小程序后先载入基础库，接着再载入业务代码。\n由于所有小程序都需要注入相同的基础库，所以"),_("strong",[t._v("小程序的基础库会被提前内置在微信客户端")]),t._v(" 。而基础库是热更新的，故一般等微信客户端携带上一个稳定版的基础库正式发布后，再进行新版本基础库的灰度和推送。")]),t._v(" "),_("h2",{attrs:{id:"注册-app-实例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#注册-app-实例"}},[t._v("#")]),t._v(" 注册 App 实例")]),t._v(" "),_("p",[t._v("宿主环境提供了"),_("code",[t._v("App()")]),t._v("构造器用来注册一个程序 App。App 实例是单例对象，在其他 JS 脚本中可以使用宿主环境提供的"),_("code",[t._v("getApp()")]),t._v("来获取程序实例。")]),t._v(" "),_("p",[_("strong",[t._v("App() 必须在 app.js 中调用，必须调用且只能调用一次。不然会出现无法预期的后果。")])]),t._v(" "),_("p",[_("code",[t._v("App()")]),t._v("函数用来注册一个小程序。接受一个"),_("code",[t._v("Object")]),t._v("参数，其指定小程序的生命周期回调等。")]),t._v(" "),_("h3",{attrs:{id:"onlaunch"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#onlaunch"}},[t._v("#")]),t._v(" onLaunch")]),t._v(" "),_("p",[t._v("小程序初始化完成时（全局只触发一次）触发"),_("code",[t._v("onLaunch")]),t._v("回调。\n在微信客户端中打开小程序有很多途径，对不同途径的打开方式，小程序有时需要做不同的业务处理。所以微信客户端会把打开方式带给"),_("code",[t._v("onLaunch")]),t._v("和"),_("code",[t._v("onShow")]),t._v("的调用参数"),_("code",[t._v("options")]),t._v("，我们可以根据参数来判断一些进入方式，以及做对应的逻辑处理。")]),t._v(" "),_("p",[t._v("例如，我需要拿到从另外一个小程序跳转过来携带的信息，此时场景值应该是 1037（参考"),_("a",{attrs:{href:"https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/scene.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("场景值"),_("OutboundLink")],1),t._v("）：")]),t._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onShow")]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scene "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("1037")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("referrerInfo "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" e"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("referrerInfo"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extraData"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拿到对应的数据")]),t._v("\n      "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" refAppid "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("referrerInfo "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" e"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("referrerInfo"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("appId"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拿到对应的小程序appid")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),_("h3",{attrs:{id:"onshow"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#onshow"}},[t._v("#")]),t._v(" onShow")]),t._v(" "),_("p",[t._v("小程序启动，或从后台进入前台显示时触发"),_("code",[t._v("onShow")]),t._v("回调。通常我们用来处理数据和状态的更新。\n小程序进入后台状态：当用户点击左上角关闭，或者按了设备 Home 键离开微信，小程序并没有直接销毁。")]),t._v(" "),_("h3",{attrs:{id:"onhide"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#onhide"}},[t._v("#")]),t._v(" onHide")]),t._v(" "),_("p",[t._v("小程序从前台进入后台时触发"),_("code",[t._v("onHide")]),t._v("回调。\n小程序进入前台状态：当再次进入微信或再次打开小程序，又会从后台进入前台。")]),t._v(" "),_("h2",{attrs:{id:"获取-app-实例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#获取-app-实例"}},[t._v("#")]),t._v(" 获取 App 实例")]),t._v(" "),_("p",[t._v("我们可以使用全局的"),_("code",[t._v("getApp()")]),t._v("函数来获取到小程序 App 实例（在"),_("code",[t._v("App()")]),t._v("内的函数中使用"),_("code",[t._v("this")]),t._v("就可以拿到"),_("code",[t._v("app")]),t._v("实例。）。")]),t._v(" "),_("p",[t._v("前面我们可以看到，App 的生命周期是由微信客户端根据用户操作主动触发的。故我们通过"),_("code",[t._v("getApp()")]),t._v("获取实例之后，不应该私自调用生命周期函数。")]),t._v(" "),_("p",[t._v("具体的原理是什么呢？小程序的 JS 脚本是运行在 JsCore 的线程里，小程序的每个页面各自有一个 WebView 线程进行渲染，所以"),_("strong",[t._v("小程序切换页面时，小程序逻辑层的 JS 脚本运行上下文依旧在同一个 JsCore 线程中。")])]),t._v(" "),_("p",[t._v("因此，"),_("strong",[t._v("App 构造器可以传递其他参数作为全局属性以达到全局共享数据的目的。")])]),t._v(" "),_("p",[t._v("由于所有页面的脚本逻辑都跑在同一个 JsCore 线程，页面使用"),_("code",[t._v("setTimeout")]),t._v("或者"),_("code",[t._v("setInterval")]),t._v("的定时器，即使切换了页面，也需要自行清理定时器。可以选择：")]),t._v(" "),_("ul",[_("li",[t._v("在页面离开"),_("code",[t._v("onUnload")]),t._v("、"),_("code",[t._v("onHide")]),t._v("等的时候自行清理")]),t._v(" "),_("li",[t._v("做全局的定时器管理（当然也还是需要关闭时清理）")])]),t._v(" "),_("p",[t._v("说到页面之间的数据共享，我们也该来讲讲小程序里页面的启动。")]),t._v(" "),_("h1",{attrs:{id:"小程序页面"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#小程序页面"}},[t._v("#")]),t._v(" 小程序页面")]),t._v(" "),_("h2",{attrs:{id:"页面生命周期"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#页面生命周期"}},[t._v("#")]),t._v(" 页面生命周期")]),t._v(" "),_("p",[t._v("宿主环境提供了"),_("code",[t._v("Page(Object)")]),t._v("构造器用来注册一个小程序页面，接受一个"),_("code",[t._v("Object")]),t._v("类型参数，其指定页面的初始数据、生命周期回调、事件处理函数等。")]),t._v(" "),_("p",[t._v("注意："),_("strong",[t._v("Object 内容在页面加载时会进行一次深拷贝，需考虑数据大小对页面加载的开销。")])]),t._v(" "),_("p",[t._v("这里我们先来看看官方的生命周期图：")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://github-imglib-1255459943.cos.ap-chengdu.myqcloud.com/mina-lifecycle.png",alt:"image"}})]),t._v(" "),_("p",[t._v("左侧是渲染层，右侧是逻辑层。几件事：")]),t._v(" "),_("ol",[_("li",[t._v("渲染层和逻辑层之间通信，是通过 Native 转发实现的。")]),t._v(" "),_("li",[t._v("逻辑层通过 Page 实例的"),_("code",[t._v("setData")]),t._v("方法传递数据到渲染层。由于需要两个线程的一些通信消耗，为了提高性能，每次只设置需要改变的最小单位数据。")]),t._v(" "),_("li",[t._v("生命周期顺序："),_("code",[t._v("onLoad")]),t._v(" -> "),_("code",[t._v("onShow")]),t._v(" -> "),_("code",[t._v("onReady")]),t._v("。")])]),t._v(" "),_("h3",{attrs:{id:"页面生命周期函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#页面生命周期函数"}},[t._v("#")]),t._v(" 页面生命周期函数")]),t._v(" "),_("p",[_("strong",[t._v("onLoad(Object query)")]),t._v("\n页面加载时触发。一个页面只会调用一次，可以在"),_("code",[t._v("onLoad")]),t._v("的参数中获取打开当前页面路径中的参数。")]),t._v(" "),_("p",[_("strong",[t._v("onShow()")]),t._v("\n页面显示/切入前台时触发。")]),t._v(" "),_("p",[_("strong",[t._v("onReady()")]),t._v("\n页面初次渲染完成时触发。一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互。")]),t._v(" "),_("p",[_("strong",[t._v("onHide()")]),t._v("\n页面隐藏/切入后台时触发。")]),t._v(" "),_("p",[_("strong",[t._v("onUnload()")]),t._v("\n页面卸载时触发。")]),t._v(" "),_("p",[t._v("和小程序实例的生命周期对比，其实页面也是有些相似。这里需要注意几点：")]),t._v(" "),_("ul",[_("li",[t._v("当前页面路径的参数获取，只能在"),_("code",[t._v("onLoad(query)")]),t._v("的"),_("code",[t._v("query")]),t._v("参数中获取，无法在"),_("code",[t._v("onShow()")]),t._v("中获取")]),t._v(" "),_("li",[_("code",[t._v("onLoad")]),t._v("、"),_("code",[t._v("onReady")]),t._v("和"),_("code",[t._v("onUnload")]),t._v("，一个页面都只会调用一次")]),t._v(" "),_("li",[t._v("页面是卸载还是切换到后台，这些除了与小程序的后台切换有关系，还会与页面的跳转、切换逻辑有关系")])]),t._v(" "),_("p",[t._v("下面我们就来看下页面的逻辑。")]),t._v(" "),_("h2",{attrs:{id:"页面导航"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#页面导航"}},[t._v("#")]),t._v(" 页面导航")]),t._v(" "),_("p",[t._v("我们知道，一个小程序会拥有多个页面。在小程序里会有页面的层级关系，例如通过"),_("code",[t._v("wx.navigateTo")]),t._v("推入一个新的页面，在首页使用 2 次"),_("code",[t._v("wx.navigateTo")]),t._v("后，页面层级会有三层：")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://github-imglib-1255459943.cos.ap-chengdu.myqcloud.com/111.png",alt:"image"}})]),t._v(" "),_("h3",{attrs:{id:"获取页面栈"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#获取页面栈"}},[t._v("#")]),t._v(" 获取页面栈")]),t._v(" "),_("p",[_("code",[t._v("getCurrentPages()")]),t._v("函数用于获取当前页面栈的实例，以数组形式按栈的顺序给出，第一个元素为首页，最后一个元素为当前页面。\n需要注意的是：")]),t._v(" "),_("ul",[_("li",[t._v("修改页面栈会导致路由以及页面状态错误")]),t._v(" "),_("li",[_("code",[t._v("App.onLaunch")]),t._v("的时候 page 还没有生成，不能在这调用"),_("code",[t._v("getCurrentPages()")])])]),t._v(" "),_("p",[t._v("但是其实不是每一次切换页面，都会被记录到页面栈里，我们看看页面导航的一些方法和行为：")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("路由方式")]),t._v(" "),_("th",[t._v("触发时机")]),t._v(" "),_("th",[t._v("页面栈表现")]),t._v(" "),_("th",[t._v("进入方式")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("初始化")]),t._v(" "),_("td",[t._v("小程序打开的第一个页面")]),t._v(" "),_("td",[t._v("新页面入栈")]),t._v(" "),_("td",[t._v("从下往上升起")])]),t._v(" "),_("tr",[_("td",[t._v("打开新页面")]),t._v(" "),_("td",[t._v("调用 API "),_("code",[t._v("wx.navigateTo")])]),t._v(" "),_("td",[t._v("新页面入栈")]),t._v(" "),_("td",[t._v("从右往左切入")])]),t._v(" "),_("tr",[_("td",[t._v("页面重定向")]),t._v(" "),_("td",[t._v("调用 API "),_("code",[t._v("wx.redirectTo")])]),t._v(" "),_("td",[t._v("当前页面出栈，新页面入栈")]),t._v(" "),_("td",[t._v("页面重新加载")])]),t._v(" "),_("tr",[_("td",[t._v("页面返回")]),t._v(" "),_("td",[t._v("返回/调用 API "),_("code",[t._v("wx.navigateBack")])]),t._v(" "),_("td",[t._v("页面不断出栈，直到目标返回页")]),t._v(" "),_("td",[t._v("从右往左切回")])]),t._v(" "),_("tr",[_("td",[t._v("Tab 切换")]),t._v(" "),_("td",[t._v("切换/调用 API "),_("code",[t._v("wx.switchTab")])]),t._v(" "),_("td",[t._v("页面全部出栈，只留下新的 Tab 页面")]),t._v(" "),_("td",[t._v("页面重新加载")])]),t._v(" "),_("tr",[_("td",[t._v("重加载")]),t._v(" "),_("td",[t._v("调用 API "),_("code",[t._v("wx.reLaunch")])]),t._v(" "),_("td",[t._v("页面全部出栈，只留下新的页面")]),t._v(" "),_("td",[t._v("页面重新加载")])])])]),t._v(" "),_("p",[t._v("关于导航 API 的几个补充点：")]),t._v(" "),_("ul",[_("li",[_("code",[t._v("wx.navigateTo")]),t._v("和"),_("code",[t._v("wx.redirectTo")]),t._v("只能打开非 TabBar 页面，"),_("code",[t._v("wx.switchTab")]),t._v("只能打开 Tabbar 页面，"),_("code",[t._v("wx.reLaunch")]),t._v("可以打开任意页面")]),t._v(" "),_("li",[t._v("TabBar 页面指在 app.json 的 TabBar 字段定义的页面（客户端窗口的底部或顶部有 tab 栏可以切换页面）")]),t._v(" "),_("li",[t._v("跳转到 TabBar 页面，路径后不能带参数（注意，Tabbar 页面初始化之后不会被销毁）")]),t._v(" "),_("li",[t._v("调用页面路由带的参数可以在目标页面的"),_("code",[t._v("onLoad")]),t._v("中获取")])]),t._v(" "),_("h2",{attrs:{id:"页面层级准备"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#页面层级准备"}},[t._v("#")]),t._v(" 页面层级准备")]),t._v(" "),_("p",[t._v("我们知道页面栈的表现，以及一些常见的导航方法，而小程序基础库也在页面层级做了些体验优化。")]),t._v(" "),_("p",[t._v("对于每一个新的页面层级，视图层都需要进行一些额外的准备工作：")]),t._v(" "),_("ul",[_("li",[t._v("在小程序启动前，微信会提前准备好一个页面层级用于展示小程序的首页")]),t._v(" "),_("li",[t._v("每当一个页面层级被用于渲染页面，微信都会提前开始准备一个新的页面层级，减少每次新开页面的耗时")])]),t._v(" "),_("p",[t._v("每个页面的准备都有三个阶段：")]),t._v(" "),_("ol",[_("li",[t._v("启动一个 WebView。")]),t._v(" "),_("li",[t._v("WebView 中初始化基础库（此时还会进行一些基础库内部优化，以提升页面渲染性能）。")]),t._v(" "),_("li",[t._v("注入小程序 WXML 结构和 WXSS 样式（小程序能在接收到页面初始数据之后马上开始渲染页面）。")])]),t._v(" "),_("p",[t._v("PS："),_("code",[t._v("wx.redirectTo")]),t._v("不会打开一个新的页面层级，而是将当前页面层级重新初始化。")]),t._v(" "),_("h2",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://developers.weixin.qq.com/miniprogram/dev/api/ui-navigate.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("导航.小程序"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/route.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("路由.小程序"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://developers.weixin.qq.com/ebook?action=get_post_info&token=935589521&volumn=1&lang=zh_CN&book=miniprogram&docid=0004eec99acc808b00861a5bd5280a",target:"_blank",rel:"noopener noreferrer"}},[t._v("3.2 程序与页面"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://developers.weixin.qq.com/ebook?action=get_post_info&token=935589521&volumn=1&lang=zh_CN&book=miniprogram&docid=000a64a29c48b0eb0086f161b5940a",target:"_blank",rel:"noopener noreferrer"}},[t._v("7.2 页面层级准备"),_("OutboundLink")],1)])]),t._v(" "),_("h1",{attrs:{id:"结束语"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#结束语"}},[t._v("#")]),t._v(" 结束语")]),t._v(" "),_("p",[t._v("页面的路由和跳转、切入方式，其实和用户的使用和交互紧紧相关，设计合理也是能大大提升用户体验的。"),_("br"),t._v("\n其实这一节的内容，大部分都是小程序文档里面有的。只不过好些相关的内容被分散在各个地方，理解和使用起来还是需要查找，这一节就当作整理笔记吧。")])])}),[],!1,null,null,null);v.default=e.exports}}]);