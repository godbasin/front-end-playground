(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{642:function(e,v,_){"use strict";_.r(v);var t=_(69),a=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p",[e._v("前面讲了那么多基础性知识性的东西，本节我们来讲讲实战的一部分--代码调试。")]),e._v(" "),_("h1",{attrs:{id:"debug-调试"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#debug-调试"}},[e._v("#")]),e._v(" debug--调试")]),e._v(" "),_("p",[e._v("通常来说，我们写代码的时候主要通过两种方式进行调试：代码中调试、浏览器中调试。")]),e._v(" "),_("h2",{attrs:{id:"代码中调试"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#代码中调试"}},[e._v("#")]),e._v(" 代码中调试")]),e._v(" "),_("p",[e._v("在代码中调试，其实说白了也就常用的"),_("code",[e._v("alert()")]),e._v("、"),_("code",[e._v("console")]),e._v("、"),_("code",[e._v("debugger")]),e._v("等输出和断点。")]),e._v(" "),_("h3",{attrs:{id:"alert"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#alert"}},[e._v("#")]),e._v(" alert")]),e._v(" "),_("p",[_("code",[e._v("alert()")]),e._v("会在窗口中显示一个警告对话框，上面显示有指定的文本内容以及一个“确定”按钮。")]),e._v(" "),_("p",[e._v("使用"),_("code",[e._v("alert()")]),e._v("需要注意的是：")]),e._v(" "),_("ol",[_("li",[_("code",[e._v("alert()")]),e._v("会阻塞进程。")]),e._v(" "),_("li",[_("code",[e._v("alert(param)")]),e._v("中"),_("code",[e._v("param")]),e._v("只能是"),_("code",[e._v("number")]),e._v("、"),_("code",[e._v("string")]),e._v("类型或者它们组成的数组。")])]),e._v(" "),_("p",[e._v("如果我们运行以下代码：")]),e._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token function"}},[e._v("alert")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"123"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"123"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[e._v("32")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[e._v("123")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),_("p",[e._v("会得到这样的结果：\n"),_("img",{attrs:{src:"https://github-imglib-1255459943.cos.ap-chengdu.myqcloud.com/1512982774%281%29.png",alt:"image"}})]),e._v(" "),_("h3",{attrs:{id:"console"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#console"}},[e._v("#")]),e._v(" console")]),e._v(" "),_("p",[_("code",[e._v("console")]),e._v("的使用，大概是本骚年最常用的一个吧。")]),e._v(" "),_("p",[e._v("很多人喜欢打断点来 debug，不过我用得最多的还是"),_("code",[e._v("console.log()")]),e._v("。当然这通常是自己调试自己的代码，如果说里面用到一些别人的库、调试其他人的问题的时候，或许打断点会更适合一些。")]),e._v(" "),_("p",[_("code",[e._v("console")]),e._v("常用的几个方法有：")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("console.log()")]),e._v("：打印字符串，以及对象、变量什么的都可以。")]),e._v(" "),_("li",[_("code",[e._v("console.info()")]),e._v("：打印以感叹号字符开始的信息，使用方法和"),_("code",[e._v("log")]),e._v("相同。")]),e._v(" "),_("li",[_("code",[e._v("console.error()")]),e._v("：打印一条错误信息。")]),e._v(" "),_("li",[_("code",[e._v("console.dir()")]),e._v("：打印一条以三角形符号开头的语句，可以点击三角展开查看对象的属性。\n"),_("blockquote",[_("p",[_("code",[e._v("console.dir()")]),e._v("常用于打印"),_("code",[e._v("DOM")]),e._v("元素的属性")])])])]),e._v(" "),_("p",[e._v("其他的可以参考"),_("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Console",target:"_blank",rel:"noopener noreferrer"}},[e._v("Console | MDN"),_("OutboundLink")],1),e._v("。")]),e._v(" "),_("p",[_("code",[e._v("console")]),e._v("适用于大致已定位到哪里出了问题，然后在某些关键点输出。这是个人的感觉，其实更多只是习惯问题吧。")]),e._v(" "),_("p",[e._v("自从浏览器支持 ES6 之后，本人就很喜欢这样输出了：")]),e._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 这样可以顺便把变量名也打印出来")]),e._v("\nconsole"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" data"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" list"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" state "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),_("h3",{attrs:{id:"debugger"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#debugger"}},[e._v("#")]),e._v(" debugger")]),e._v(" "),_("p",[_("code",[e._v("debugger")]),e._v("语句调用任何可用的调试功能，例如设置断点。 如果没有调试功能可用，则此语句不起作用。"),_("br"),e._v("\n当"),_("code",[e._v("debugger")]),e._v("被调用时, 执行暂停在"),_("code",[e._v("debugger")]),e._v("语句的位置。就像在脚本源代码中的断点一样。")]),e._v(" "),_("p",[e._v("我基本很少用到"),_("code",[e._v("debugger")]),e._v("，不过据说在"),_("code",[e._v("node.js")]),e._v("中，因为木有浏览器自带的断点，使用"),_("code",[e._v("debugger")]),e._v("来调试也是很方便的（可惜自己做来做去，还是主打 PC 端应用就是了）。")]),e._v(" "),_("p",[e._v("还有，使用完之后，发布前记得注释或者删除掉噢。")]),e._v(" "),_("h1",{attrs:{id:"浏览器-chrome-调试"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器-chrome-调试"}},[e._v("#")]),e._v(" 浏览器(Chrome)调试")]),e._v(" "),_("p",[e._v("浏览器中调试功能又多又方便（主要是在 Chrome 下），大家可以参考下一些文章。前面章节有简单介绍过，这里讲一下用得比较多的，后面也会给到一些参考文章。")]),e._v(" "),_("h2",{attrs:{id:"devtools"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#devtools"}},[e._v("#")]),e._v(" DevTools")]),e._v(" "),_("p",[e._v("我们先看看 Chrome 提供的开发者工具："),_("br"),e._v(" "),_("img",{attrs:{src:"https://github-imglib-1255459943.cos.ap-chengdu.myqcloud.com/1512990373%281%29.png",alt:"image"}})]),e._v(" "),_("p",[e._v("跟上次一样，我们从左往右讲起：")]),e._v(" "),_("ol",[_("li",[e._v("箭头按钮：用于在页面选择一个元素来审查和查看它的相关信息。")]),e._v(" "),_("li",[e._v("设备图标：点击它可以切换到不同的终端（移动端和 PC 端）进行开发模式。可以选择不同的移动终端设备，同时可以选择不同的尺寸比例。常用的移动端页面调试，还能通过配置"),_("code",[e._v("User agent")]),e._v("来模拟终端环境。")]),e._v(" "),_("li",[_("code",[e._v("Elements")]),e._v("：用来查看、修改页面上的元素，包括"),_("code",[e._v("DOM")]),e._v("标签，以及"),_("code",[e._v("css")]),e._v("样式的查看，修改，还有相关盒模型的图形信息。")]),e._v(" "),_("li",[_("code",[e._v("Console")]),e._v("：用于打印和输出相关的命令信息，源代码定位等等。")]),e._v(" "),_("li",[_("code",[e._v("Sources")]),e._v("："),_("code",[e._v("Sources")]),e._v("下的"),_("code",[e._v("Sources")]),e._v("查看浏览器页面中的源文件（"),_("code",[e._v("html/js/img/css")]),e._v("等），点击下面的"),_("code",[e._v("{}")]),e._v("大括号可以将代码转成可读格式，同时可给"),_("code",[e._v("js")]),e._v("文件添加上断点。"),_("code",[e._v("Sources")]),e._v("下的"),_("code",[e._v("Snippets")]),e._v("可以添加文件片段，可在浏览器中运行。")]),e._v(" "),_("li",[_("code",[e._v("Network")]),e._v("：可以看到所有的资源请求，包括网络请求、静态资源（"),_("code",[e._v("html")]),e._v("、"),_("code",[e._v("css")]),e._v("、"),_("code",[e._v("js")]),e._v("、图片等）文件请求，常用于调试网络请求。")])]),e._v(" "),_("p",[e._v("剩下的功能或许用得不是特别多，可以了解下（本人了解不多，或许不一定准确）：")]),e._v(" "),_("ol",{attrs:{start:"7"}},[_("li",[_("code",[e._v("Performance")]),e._v("：查看页面在浏览器运行时的性能表现，如 CPU\\GPU 执行时间与内存占用等。")]),e._v(" "),_("li",[_("code",[e._v("Memory")]),e._v("：似乎是内存泄漏分析相关的功能？")]),e._v(" "),_("li",[_("code",[e._v("Application")]),e._v("：会列出所有的资源，以及 HTML5 的 Database 和 LocalStore 等，你可以对存储的内容编辑和删除。")]),e._v(" "),_("li",[_("code",[e._v("Security")]),e._v("：查看网站的安全性，有效证书等。")]),e._v(" "),_("li",[_("code",[e._v("Audits")]),e._v("：会针对目前网页提出若干条优化的建议，这些建议分为两大类，一类是网络加载性能，另一类是界面性能。")])]),e._v(" "),_("h2",{attrs:{id:"打断点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#打断点"}},[e._v("#")]),e._v(" 打断点")]),e._v(" "),_("h3",{attrs:{id:"_1-代码断点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-代码断点"}},[e._v("#")]),e._v(" 1. 代码断点")]),e._v(" "),_("p",[e._v("常用的浏览器代码断点，在"),_("code",[e._v("Sources")]),e._v("面板"),_("code",[e._v("js")]),e._v("文件行号处设置断点，如图我们下了个断点："),_("br"),e._v(" "),_("img",{attrs:{src:"https://github-imglib-1255459943.cos.ap-chengdu.myqcloud.com/1512993498%281%29.jpg",alt:"image"}})]),e._v(" "),_("p",[e._v("这里我们在请求发起的位置打了个断点，每次我们在搜索输入框输入的时候，都会发送请求，触发 debug 模式。")]),e._v(" "),_("p",[e._v("这里除了常规断点外, 还有个条件断点(右键 -> conditional breakpoint), 在设置的条件为"),_("code",[e._v("true")]),e._v("时才会断电, 在循环中需要断点时比较有用。断点后可以查看堆栈、变量。")]),e._v(" "),_("h3",{attrs:{id:"_2-事件断点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-事件断点"}},[e._v("#")]),e._v(" 2. 事件断点")]),e._v(" "),_("p",[e._v("元素上事件断点：某一事件/某类事件，从"),_("code",[e._v("Elements > Event Listeners")]),e._v("中进行。")]),e._v(" "),_("h3",{attrs:{id:"_3-dom-断点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-dom-断点"}},[e._v("#")]),e._v(" 3. DOM 断点")]),e._v(" "),_("p",[e._v("一般是"),_("code",[e._v("DOM")]),e._v("结构改变时触发。有时候我们需要监听某个"),_("code",[e._v("DOM")]),e._v("被修改情况，而不关心是哪行代码做的修改（也可能有多处都会对其做修改），可以直接在"),_("code",[e._v("DOM")]),e._v("上设置断点。")]),e._v(" "),_("p",[e._v("在元素审查的"),_("code",[e._v("Elements")]),e._v("标签页中在某个元素上右键菜单里可以设置三种不同情况的断点：")]),e._v(" "),_("ul",[_("li",[e._v("子节点修改")]),e._v(" "),_("li",[e._v("自身属性修改")]),e._v(" "),_("li",[e._v("自身节点被删除")])]),e._v(" "),_("h3",{attrs:{id:"_4-xhr-断点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-xhr-断点"}},[e._v("#")]),e._v(" 4. XHR 断点")]),e._v(" "),_("p",[e._v("右侧调试区有一个"),_("code",[e._v("XHR Breakpoints")]),e._v("，点击"),_("code",[e._v("+")]),e._v(" 并输入"),_("code",[e._v("URL")]),e._v("包含的字符串，即可监听该"),_("code",[e._v("URL")]),e._v("的"),_("code",[e._v("Ajax")]),e._v("请求，输入内容就相当于"),_("code",[e._v("URL")]),e._v("的过滤器。"),_("br"),e._v("\n一旦"),_("code",[e._v("XHR")]),e._v("调用触发时就会在"),_("code",[e._v("request.send()")]),e._v("的地方中断。")]),e._v(" "),_("h3",{attrs:{id:"_5-全局事件断点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-全局事件断点"}},[e._v("#")]),e._v(" 5. 全局事件断点")]),e._v(" "),_("p",[e._v("对事件发生时断点，不会限定在元素上，只要是事件发生，并且有"),_("code",[e._v("handler")]),e._v("就断点。"),_("br"),e._v("\n还可以对"),_("code",[e._v("resize")]),e._v("、"),_("code",[e._v("ajax")]),e._v("、"),_("code",[e._v("setTimeout/setInterval")]),e._v("断点。")]),e._v(" "),_("p",[e._v("上面这些断点本骚年都用得不是很多，所以也不能提供很好的说明。"),_("br"),e._v("\n更多详细内容，可以参考"),_("a",{attrs:{href:"http://www.cnblogs.com/jingwhale/p/4508774.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("《页面制作之调试工具》"),_("OutboundLink")],1),e._v("，里面通过动图讲述了一些断点是如何添加的。")]),e._v(" "),_("h1",{attrs:{id:"关于-debug-的一点心得"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#关于-debug-的一点心得"}},[e._v("#")]),e._v(" 关于 debug 的一点心得")]),e._v(" "),_("h2",{attrs:{id:"debug-样式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#debug-样式"}},[e._v("#")]),e._v(" debug 样式")]),e._v(" "),_("p",[e._v("样式的调试需要有个前提，就是对一些样式属性有很好的认识和理解，尤其涉及盒子模型、"),_("code",[e._v("display")]),e._v("和定位等。"),_("br"),e._v("\n样式的规则除了一些基本的逻辑能遵循（可参考前面文章"),_("RouterLink",{attrs:{to:"/front-end-basic/front-end/front-end-3.html"}},[e._v("《3.HTML 和 CSS》")]),e._v("），更多的则是丰富的经验，多写、多练。")],1),e._v(" "),_("p",[e._v("在此之外，一般样式的 debug 逻辑大概会是这样：")]),e._v(" "),_("ol",[_("li",[e._v("样式是否生效。")]),e._v(" "),_("li",[e._v("文件、相关样式代码是否加载。")]),e._v(" "),_("li",[e._v("是否被其他样式覆盖（优先级问题）。")])]),e._v(" "),_("p",[e._v("常见的有上面的问题，除此之外，大部分都是没使用合理的"),_("code",[e._v("style")]),e._v("了吧。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://github-imglib-1255459943.cos.ap-chengdu.myqcloud.com/1512998012%281%29.png",alt:"image"}}),_("br"),e._v("\n如上图，一般我们会在选中对应的元素后，从上往下来找到生效（或不生效）的样式，同时也可以定位到对应的源文件。")]),e._v(" "),_("p",[e._v("这里面如果是本地环境调试的话，在"),_("code",[e._v("source map")]),e._v("的支持下，我们甚至可以直接在浏览器中修改源文件，保存生效。具体配置和操作可以参考"),_("a",{attrs:{href:"https://developers.google.cn/web/tools/chrome-devtools/javascript/source-maps?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"}},[e._v("将预处理代码映射到源代码"),_("OutboundLink")],1),e._v("。")]),e._v(" "),_("h2",{attrs:{id:"debug-js"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#debug-js"}},[e._v("#")]),e._v(" debug JS")]),e._v(" "),_("p",[e._v("JS 的调试，像上面说过的，一般分为输出和打断点两种。")]),e._v(" "),_("p",[e._v("一般 JS 的 debug 逻辑，未按预期执行会有这样的原因：代码未执行到理想的位置。")]),e._v(" "),_("p",[e._v("这时候我们要思考这样的问题：")]),e._v(" "),_("ol",[_("li",[e._v("为事件触发执行 -> 检测事件是否被触发。")]),e._v(" "),_("li",[e._v("在函数中执行 -> 检测函数是否被调用。")]),e._v(" "),_("li",[e._v("在判断语句中执行 -> 检测判断是否正确。")])]),e._v(" "),_("p",[e._v("我们可以在这些地方进行输出，或者打下断点：")]),e._v(" "),_("ol",[_("li",[e._v("事件触发的地方。")]),e._v(" "),_("li",[e._v("函数调用过程。")]),e._v(" "),_("li",[e._v("判断语句（"),_("code",[e._v("if")]),e._v("等）。")])]),e._v(" "),_("p",[e._v("以上是类似的推导逻辑，我们在写代码时，会有一个预期的执行顺序和期望，如果说不生效，则我们可以：")]),e._v(" "),_("ul",[_("li",[e._v("从前往后执行步骤，看在哪一步分了岔路")]),e._v(" "),_("li",[e._v("从后往前打下断点，看在哪一步走丢了")])]),e._v(" "),_("p",[e._v("其实最重要的是思路需要清晰，如果说你连自己要做的功能，逻辑还没理清楚的话，编写的代码质量不会高，同时调试性能也会随着下降。")]),e._v(" "),_("h2",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"http://www.jianshu.com/p/b25c5b88baf5",target:"_blank",rel:"noopener noreferrer"}},[e._v("《前端 chrome 浏览器调试总结》"),_("OutboundLink")],1)]),e._v(" "),_("li",[_("a",{attrs:{href:"https://developer.chrome.com/devtools",target:"_blank",rel:"noopener noreferrer"}},[e._v("Chrome DevTools Overview"),_("OutboundLink")],1)]),e._v(" "),_("li",[_("a",{attrs:{href:"http://www.cnblogs.com/jingwhale/p/4508774.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("《页面制作之调试工具》"),_("OutboundLink")],1)])]),e._v(" "),_("h1",{attrs:{id:"结束语"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#结束语"}},[e._v("#")]),e._v(" 结束语")]),e._v(" "),_("p",[e._v("这一节我们主要基于 Chrome 浏览器，大致讲了一些开发者工具的功能。调试是很重要的一步，每一次 debug 我们都要吸取经验，总结教训。不管是 CSS 还是 JS 的调试，经验的积累都是很需要的，同时也能提高我们写代码的质量。")])])}),[],!1,null,null,null);v.default=a.exports}}]);